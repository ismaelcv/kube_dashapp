[build-system]
# Minimum requirements for the build system to execute. (see https://www.python.org/dev/peps/pep-0518/)
requires = ["setuptools", "wheel","poetry-core>=1.2.0"]  # PEP 508 specifications.
build-backend = "poetry.core.masonry.api"

[tool.pylint.message_control]
disable = [
    "fixme",                     # Because else it doesnt allow to add TODO: comments
    "missing-module-docstring",  # We dont really need doctrings in all modules
    "invalid-name",              # We dont need pyling messing with our name conventions
    "super-init-not-called",     # Do not require to call the base class all the time
    "arguments-differ",          # Else not possible to change args on child classes
    "consider-using-dict-items", # not necessary to use dict.items() all the time
]


[tool.pylint.similarities]
# Minimum lines number of a similarity.
min-similarity-lines=10
max-args = 7
ignore-comments = true
ignore-imports = true

[tool.pylint.'MESSAGES CONTROL']
extension-pkg-whitelist = "pydantic"

[tool.poetry]
name = "dashapp_skeleton"
version = "0.0.0"
description = "Generic repo with a dash app connected to s3 and ready to go"
authors = ["Ismael Cabral <ismael.cabral@amazing.yay>"]

[tool.poetry.dependencies]
python = ">=3.9, <3.11"
pylint = "^2.15.2"
pytest = "^7.1.3"
dash = "^2.6.2"
gunicorn = "^20.1.0"


# added with poetry add -G dev package_name
[tool.poetry.group.dev.dependencies]
pre-commit = "^2.20.0"
black = "^22.8.0"
aws-cdk-aws-autoscaling = "^1.140.0"
aws-cdk-aws-certificatemanager = "^1.140.0"
aws-cdk-aws-cloudwatch-actions = "^1.140.0"
aws-cdk-aws-ec2 = "^1.140.0"
aws-cdk-aws-ecs = "^1.140.0"
aws-cdk-aws-ecs-patterns = "^1.140.0"
aws-cdk-aws-elasticloadbalancingv2 = "^1.140.0"
aws-cdk-aws-elasticloadbalancingv2-targets = "^1.140.0"
aws-cdk-aws-iam = "^1.140.0"
aws-cdk-aws-logs = "^1.140.0"
aws-cdk-aws-rds = "^1.140.0"
aws-cdk-aws-route53 = "^1.140.0"
aws-cdk-aws-ssm = "^1.140.0"
aws-cdk-core = "^1.140.0"





[tool.black]
line-length = 120
preview = true
target-version = ['py39']


[tool.isort]
profile = "black"
line_length = 120


[tool.poetry.scripts]
lambda_test = "lambda_test.main:main"
